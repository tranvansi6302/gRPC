/**
 * @fileoverview gRPC-Web generated client stub for greeting
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: proto/greeting.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_greeting_pb from '../proto/greeting_pb';


export class GreeterClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGreet = new grpcWeb.MethodDescriptor(
    '/greeting.Greeter/Greet',
    grpcWeb.MethodType.UNARY,
    proto_greeting_pb.HelloRequest,
    proto_greeting_pb.HelloReply,
    (request: proto_greeting_pb.HelloRequest) => {
      return request.serializeBinary();
    },
    proto_greeting_pb.HelloReply.deserializeBinary
  );

  greet(
    request: proto_greeting_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_greeting_pb.HelloReply>;

  greet(
    request: proto_greeting_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.HelloReply) => void): grpcWeb.ClientReadableStream<proto_greeting_pb.HelloReply>;

  greet(
    request: proto_greeting_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.HelloReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/greeting.Greeter/Greet',
        request,
        metadata || {},
        this.methodDescriptorGreet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/greeting.Greeter/Greet',
    request,
    metadata || {},
    this.methodDescriptorGreet);
  }

  methodDescriptorCreateGreeting = new grpcWeb.MethodDescriptor(
    '/greeting.Greeter/CreateGreeting',
    grpcWeb.MethodType.UNARY,
    proto_greeting_pb.CreateGreetingRequest,
    proto_greeting_pb.GreetingReply,
    (request: proto_greeting_pb.CreateGreetingRequest) => {
      return request.serializeBinary();
    },
    proto_greeting_pb.GreetingReply.deserializeBinary
  );

  createGreeting(
    request: proto_greeting_pb.CreateGreetingRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_greeting_pb.GreetingReply>;

  createGreeting(
    request: proto_greeting_pb.CreateGreetingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.GreetingReply) => void): grpcWeb.ClientReadableStream<proto_greeting_pb.GreetingReply>;

  createGreeting(
    request: proto_greeting_pb.CreateGreetingRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.GreetingReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/greeting.Greeter/CreateGreeting',
        request,
        metadata || {},
        this.methodDescriptorCreateGreeting,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/greeting.Greeter/CreateGreeting',
    request,
    metadata || {},
    this.methodDescriptorCreateGreeting);
  }

  methodDescriptorReadGreetings = new grpcWeb.MethodDescriptor(
    '/greeting.Greeter/ReadGreetings',
    grpcWeb.MethodType.UNARY,
    proto_greeting_pb.ReadGreetingsRequest,
    proto_greeting_pb.ReadGreetingsReply,
    (request: proto_greeting_pb.ReadGreetingsRequest) => {
      return request.serializeBinary();
    },
    proto_greeting_pb.ReadGreetingsReply.deserializeBinary
  );

  readGreetings(
    request: proto_greeting_pb.ReadGreetingsRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_greeting_pb.ReadGreetingsReply>;

  readGreetings(
    request: proto_greeting_pb.ReadGreetingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.ReadGreetingsReply) => void): grpcWeb.ClientReadableStream<proto_greeting_pb.ReadGreetingsReply>;

  readGreetings(
    request: proto_greeting_pb.ReadGreetingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.ReadGreetingsReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/greeting.Greeter/ReadGreetings',
        request,
        metadata || {},
        this.methodDescriptorReadGreetings,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/greeting.Greeter/ReadGreetings',
    request,
    metadata || {},
    this.methodDescriptorReadGreetings);
  }

  methodDescriptorUpdateGreeting = new grpcWeb.MethodDescriptor(
    '/greeting.Greeter/UpdateGreeting',
    grpcWeb.MethodType.UNARY,
    proto_greeting_pb.UpdateGreetingRequest,
    proto_greeting_pb.GreetingReply,
    (request: proto_greeting_pb.UpdateGreetingRequest) => {
      return request.serializeBinary();
    },
    proto_greeting_pb.GreetingReply.deserializeBinary
  );

  updateGreeting(
    request: proto_greeting_pb.UpdateGreetingRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_greeting_pb.GreetingReply>;

  updateGreeting(
    request: proto_greeting_pb.UpdateGreetingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.GreetingReply) => void): grpcWeb.ClientReadableStream<proto_greeting_pb.GreetingReply>;

  updateGreeting(
    request: proto_greeting_pb.UpdateGreetingRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.GreetingReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/greeting.Greeter/UpdateGreeting',
        request,
        metadata || {},
        this.methodDescriptorUpdateGreeting,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/greeting.Greeter/UpdateGreeting',
    request,
    metadata || {},
    this.methodDescriptorUpdateGreeting);
  }

  methodDescriptorDeleteGreeting = new grpcWeb.MethodDescriptor(
    '/greeting.Greeter/DeleteGreeting',
    grpcWeb.MethodType.UNARY,
    proto_greeting_pb.DeleteGreetingRequest,
    proto_greeting_pb.DeleteGreetingReply,
    (request: proto_greeting_pb.DeleteGreetingRequest) => {
      return request.serializeBinary();
    },
    proto_greeting_pb.DeleteGreetingReply.deserializeBinary
  );

  deleteGreeting(
    request: proto_greeting_pb.DeleteGreetingRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_greeting_pb.DeleteGreetingReply>;

  deleteGreeting(
    request: proto_greeting_pb.DeleteGreetingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.DeleteGreetingReply) => void): grpcWeb.ClientReadableStream<proto_greeting_pb.DeleteGreetingReply>;

  deleteGreeting(
    request: proto_greeting_pb.DeleteGreetingRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_greeting_pb.DeleteGreetingReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/greeting.Greeter/DeleteGreeting',
        request,
        metadata || {},
        this.methodDescriptorDeleteGreeting,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/greeting.Greeter/DeleteGreeting',
    request,
    metadata || {},
    this.methodDescriptorDeleteGreeting);
  }

}

